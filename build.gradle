plugins {
    id 'org.springframework.boot' version "2.0.4.RELEASE"
    id 'com.moowork.node' version '1.2.0'
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'



group = 'com.ozwillo'
version = '0.13.0'

sourceCompatibility = 1.8


node {
    version = '8.9.0'
    download = true
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-jersey'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'io.javaslang:javaslang:2.0.4'
    implementation 'com.github.ozwillo:ozwillo-java-spring-integration:1.26.0'
    implementation 'com.github.ben-manes.caffeine:caffeine:2.3.5'
    implementation 'com.squareup.retrofit2:retrofit:2.2.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.2.0'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    
    // required to parse logback-spring.groovy
    // TODO : quite a fat dependency for a configuration file
    runtimeOnly 'org.codehaus.groovy:groovy:2.4.7'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
}

compileJava {
    options.deprecation = true
}

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "dev"
}

bootJar {
    launchScript({
        properties 'initInfoProvides': 'ozwillo-dc-exporter'
    })
}

configure(tasks.processResources) {
    // we don't want source JSX in the jar, we only need their transpiled, bundled version in build/
    exclude 'public/jsx/'
    exclude 'public/css/'
}

task frontBundle(type: YarnTask) {
    args = ['run', 'build']
    doLast {
        copy {
            from "${sourceSets.main.resources.srcDirs[0]}/public/build"
            into "${sourceSets.main.output.resourcesDir}/public/build"
        }
    }
}

jar.dependsOn(frontBundle)
frontBundle.dependsOn(yarn_install)
